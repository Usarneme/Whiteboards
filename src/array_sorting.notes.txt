Question #5: Array Sorting

Write an algorithm that sorts an array without using the sort() method. There are many different sorting algorithms - take the time to read about the following:

Quick sort
Merge sort
Heap sort
Insertion sort
Bubble sort
Selection sort

You may implement any of the above algorithms (or your own) to solve the problem - as long as it doesn't use sort(). Example

Input: [9, 2, 7, 12]

Output: [2, 7, 9, 12]

---

This is far and away the hardest prompt simply due to the amount of DSA/computer science topics required to fully grasp all of these searching and sorting algorithms.

People take entire classes just to learn about these. Very smart people spent decades researching and coming up with optimal or semi-optimal solutions to these problems. I hope we're not expected to be able to come up with the same solutions on the fly for a whiteboard prompt, If not, this is a memorization question and imo that isn't very valuable when you can always look up how to do these things.

Awareness of the problems and these various solutions is important but anyone who tries to roll their own sorting algorithm is, in my opinion, not a good engineer. Stand on the shoulders of giants and use the fruits of their labors.

---

Quick Sort

Divide and conquer algorithm
Pick an element as a pivot, partition the given array around the pivot

Merge Sort

Divide and conquer algorithm
Divides input in half, calls itself on each of the halves, then merges the sorted halves

Heap Sort

Comparison-based sorting algorithm based on the Binary Heap data structure
Find the minimum element and place it at the beginning; repeat until all elements are sorted

Insertion Sort

Create a sorted array; loop through the unsorted array in order and add elements to the sorted array in the correct position

Bubble Sort

Repeatedly swap adjacent elements if they are in the wrong order

Selection Sort

Repeatedly find the minimum element in the unsorted part of an array and put it at the beginning of sorted part of the array

